{
    "sourceFile": "script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1749468139953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749476058563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,70 +0,0 @@\n-// On-Time Task Manager JS\r\n-\r\n-document.addEventListener('DOMContentLoaded', () => {\r\n-    const taskForm = document.getElementById('task-form');\r\n-    const taskInput = document.getElementById('task-input');\r\n-    const taskList = document.getElementById('task-list');\r\n-\r\n-    let tasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n-\r\n-    function saveTasks() {\r\n-        localStorage.setItem('tasks', JSON.stringify(tasks));\r\n-    }\r\n-\r\n-    function renderTasks() {\r\n-        taskList.innerHTML = '';\r\n-        if (tasks.length === 0) {\r\n-            const li = document.createElement('li');\r\n-            li.textContent = 'No tasks yet!';\r\n-            li.style.textAlign = 'center';\r\n-            li.style.color = '#888';\r\n-            taskList.appendChild(li);\r\n-            return;\r\n-        }\r\n-        tasks.forEach((task, idx) => {\r\n-            const li = document.createElement('li');\r\n-            li.className = 'task-item' + (task.completed ? ' completed' : '');\r\n-            li.setAttribute('data-index', idx);\r\n-            li.innerHTML = `\r\n-                <span>${task.text}</span>\r\n-                <div class=\"task-actions\">\r\n-                    <button class=\"action-btn complete\" title=\"Mark as complete\" aria-label=\"Complete Task\">✔</button>\r\n-                    <button class=\"action-btn delete\" title=\"Delete task\" aria-label=\"Delete Task\">🗑</button>\r\n-                </div>\r\n-            `;\r\n-            li.querySelector('.complete').onclick = () => toggleComplete(idx);\r\n-            li.querySelector('.delete').onclick = () => deleteTask(idx);\r\n-            taskList.appendChild(li);\r\n-        });\r\n-    }\r\n-\r\n-    function addTask(text) {\r\n-        tasks.unshift({ text, completed: false });\r\n-        saveTasks();\r\n-        renderTasks();\r\n-    }\r\n-\r\n-    function toggleComplete(idx) {\r\n-        tasks[idx].completed = !tasks[idx].completed;\r\n-        saveTasks();\r\n-        renderTasks();\r\n-    }\r\n-\r\n-    function deleteTask(idx) {\r\n-        tasks.splice(idx, 1);\r\n-        saveTasks();\r\n-        renderTasks();\r\n-    }\r\n-\r\n-    taskForm.onsubmit = (e) => {\r\n-        e.preventDefault();\r\n-        const text = taskInput.value.trim();\r\n-        if (text) {\r\n-            addTask(text);\r\n-            taskInput.value = '';\r\n-            taskInput.focus();\r\n-        }\r\n-    };\r\n-\r\n-    renderTasks();\r\n-});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1749476682509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,5 +8,5 @@\n         landingPage.style.display = 'none';\r\n         \r\n         // Show the task manager\r\n         taskManager.style.display = 'block';\r\n-    }\n\\ No newline at end of file\n+    });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1749476886215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,14 @@\n+document.addEventListener(\"DOMContentLoaded\", () => {\r\n+  const startButton = document.getElementById(\"get-started\");\r\n+  const landingPage = document.getElementById(\"landing-page\");\r\n+  const taskManager = document.getElementById(\"task-manager\");\r\n+\r\n+  if (startButton && landingPage && taskManager) {\r\n+    startButton.addEventListener(\"click\", () => {\r\n+      landingPage.style.display = \"none\";\r\n+      taskManager.style.display = \"block\";\r\n+    });\r\n+  } else {\r\n+    console.log(\"❌ One of the elements wasn't found\");\r\n+  }\r\n+});\r\n"
                }
            ],
            "date": 1749468139953,
            "name": "Commit-0",
            "content": "// On-Time Task Manager JS\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const taskForm = document.getElementById('task-form');\r\n    const taskInput = document.getElementById('task-input');\r\n    const taskList = document.getElementById('task-list');\r\n\r\n    let tasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n\r\n    function saveTasks() {\r\n        localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    }\r\n\r\n    function renderTasks() {\r\n        taskList.innerHTML = '';\r\n        if (tasks.length === 0) {\r\n            const li = document.createElement('li');\r\n            li.textContent = 'No tasks yet!';\r\n            li.style.textAlign = 'center';\r\n            li.style.color = '#888';\r\n            taskList.appendChild(li);\r\n            return;\r\n        }\r\n        tasks.forEach((task, idx) => {\r\n            const li = document.createElement('li');\r\n            li.className = 'task-item' + (task.completed ? ' completed' : '');\r\n            li.setAttribute('data-index', idx);\r\n            li.innerHTML = `\r\n                <span>${task.text}</span>\r\n                <div class=\"task-actions\">\r\n                    <button class=\"action-btn complete\" title=\"Mark as complete\" aria-label=\"Complete Task\">✔</button>\r\n                    <button class=\"action-btn delete\" title=\"Delete task\" aria-label=\"Delete Task\">🗑</button>\r\n                </div>\r\n            `;\r\n            li.querySelector('.complete').onclick = () => toggleComplete(idx);\r\n            li.querySelector('.delete').onclick = () => deleteTask(idx);\r\n            taskList.appendChild(li);\r\n        });\r\n    }\r\n\r\n    function addTask(text) {\r\n        tasks.unshift({ text, completed: false });\r\n        saveTasks();\r\n        renderTasks();\r\n    }\r\n\r\n    function toggleComplete(idx) {\r\n        tasks[idx].completed = !tasks[idx].completed;\r\n        saveTasks();\r\n        renderTasks();\r\n    }\r\n\r\n    function deleteTask(idx) {\r\n        tasks.splice(idx, 1);\r\n        saveTasks();\r\n        renderTasks();\r\n    }\r\n\r\n    taskForm.onsubmit = (e) => {\r\n        e.preventDefault();\r\n        const text = taskInput.value.trim();\r\n        if (text) {\r\n            addTask(text);\r\n            taskInput.value = '';\r\n            taskInput.focus();\r\n        }\r\n    };\r\n\r\n    renderTasks();\r\n});"
        }
    ]
}