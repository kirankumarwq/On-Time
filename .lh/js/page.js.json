{
    "sourceFile": "js/page.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1749486865000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749486950833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+import { getSelectedPage, updatePages } from './sidebar.js';\r\n+\r\n // Page logic: handles title, blocks, block editing, drag-drop, commands\r\n export function initPage() {\r\n-  // TODO: Implement page logic\r\n+  // MVP: block editing handled in sidebar.js renderPage for now\r\n }\r\n"
                },
                {
                    "date": 1749487597469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,177 @@\n import { getSelectedPage, updatePages } from './sidebar.js';\r\n \r\n-// Page logic: handles title, blocks, block editing, drag-drop, commands\r\n+function createBlock(type = 'text', content = '') {\r\n+  return {\r\n+    id: 'block-' + Date.now() + '-' + Math.random().toString(36).slice(2, 8),\r\n+    type,\r\n+    content,\r\n+  };\r\n+}\r\n+\r\n+function renderBlock(block, idx, page, blocksContainer) {\r\n+  const blockDiv = document.createElement('div');\r\n+  blockDiv.className = 'block';\r\n+  blockDiv.contentEditable = true;\r\n+  blockDiv.dataset.id = block.id;\r\n+  blockDiv.dataset.type = block.type;\r\n+  blockDiv.spellcheck = true;\r\n+  // Block type rendering\r\n+  if (block.type === 'h1') {\r\n+    blockDiv.style.fontSize = '2rem';\r\n+    blockDiv.style.fontWeight = '700';\r\n+    blockDiv.style.margin = '1.2em 0 0.5em 0';\r\n+  } else if (block.type === 'h2') {\r\n+    blockDiv.style.fontSize = '1.5rem';\r\n+    blockDiv.style.fontWeight = '600';\r\n+    blockDiv.style.margin = '1em 0 0.4em 0';\r\n+  } else if (block.type === 'h3') {\r\n+    blockDiv.style.fontSize = '1.2rem';\r\n+    blockDiv.style.fontWeight = '600';\r\n+    blockDiv.style.margin = '0.8em 0 0.3em 0';\r\n+  } else if (block.type === 'todo') {\r\n+    blockDiv.contentEditable = false;\r\n+    blockDiv.style.display = 'flex';\r\n+    blockDiv.style.alignItems = 'center';\r\n+    const checkbox = document.createElement('input');\r\n+    checkbox.type = 'checkbox';\r\n+    checkbox.checked = !!block.checked;\r\n+    checkbox.onchange = e => {\r\n+      block.checked = e.target.checked;\r\n+      blockDiv.classList.toggle('checked', block.checked);\r\n+      page.updated = Date.now();\r\n+      updatePages(window.pages);\r\n+    };\r\n+    const span = document.createElement('span');\r\n+    span.textContent = block.content;\r\n+    span.contentEditable = true;\r\n+    span.style.flex = '1';\r\n+    span.oninput = e => {\r\n+      block.content = e.target.textContent;\r\n+      page.updated = Date.now();\r\n+      updatePages(window.pages);\r\n+    };\r\n+    blockDiv.appendChild(checkbox);\r\n+    blockDiv.appendChild(span);\r\n+  } else if (block.type === 'bullet') {\r\n+    blockDiv.style.paddingLeft = '2.5em';\r\n+    blockDiv.style.position = 'relative';\r\n+    const bullet = document.createElement('span');\r\n+    bullet.textContent = 'â€¢';\r\n+    bullet.style.position = 'absolute';\r\n+    bullet.style.left = '1.2em';\r\n+    bullet.style.color = '#bbb';\r\n+    blockDiv.appendChild(bullet);\r\n+    blockDiv.appendChild(document.createTextNode(block.content));\r\n+  } else if (block.type === 'code') {\r\n+    blockDiv.style.fontFamily = 'monospace';\r\n+    blockDiv.style.background = '#f6f6f6';\r\n+    blockDiv.style.border = '1px solid #e3e3e3';\r\n+    blockDiv.style.padding = '0.7rem 1.2rem';\r\n+    blockDiv.style.whiteSpace = 'pre';\r\n+    blockDiv.textContent = block.content;\r\n+  } else if (block.type === 'quote') {\r\n+    blockDiv.style.borderLeft = '3px solid #bbb';\r\n+    blockDiv.style.color = '#888';\r\n+    blockDiv.style.fontStyle = 'italic';\r\n+    blockDiv.style.background = '#faf9f6';\r\n+    blockDiv.textContent = block.content;\r\n+  } else {\r\n+    blockDiv.textContent = block.content;\r\n+  }\r\n+  // Block input\r\n+  if (block.type !== 'todo') {\r\n+    blockDiv.oninput = e => {\r\n+      block.content = e.target.textContent;\r\n+      page.updated = Date.now();\r\n+      updatePages(window.pages);\r\n+    };\r\n+  }\r\n+  // Add block type selector on \"/\"\r\n+  blockDiv.onkeydown = e => {\r\n+    if (e.key === '/' && block.type === 'text') {\r\n+      showCommandMenu(blockDiv, block, page, idx);\r\n+      e.preventDefault();\r\n+    }\r\n+    // Enter to add new block\r\n+    if (e.key === 'Enter' && !e.shiftKey) {\r\n+      e.preventDefault();\r\n+      addBlockAfter(idx, page);\r\n+    }\r\n+    // Backspace to delete empty block\r\n+    if (e.key === 'Backspace' && !block.content && page.blocks.length > 1) {\r\n+      e.preventDefault();\r\n+      page.blocks.splice(idx, 1);\r\n+      updatePages(window.pages);\r\n+    }\r\n+  };\r\n+  blocksContainer.appendChild(blockDiv);\r\n+}\r\n+\r\n+function addBlockAfter(idx, page) {\r\n+  const newBlock = createBlock('text', '');\r\n+  page.blocks.splice(idx + 1, 0, newBlock);\r\n+  updatePages(window.pages);\r\n+  setTimeout(() => {\r\n+    const blocks = document.querySelectorAll('.block');\r\n+    if (blocks[idx + 1]) blocks[idx + 1].focus();\r\n+  }, 10);\r\n+}\r\n+\r\n+function showCommandMenu(blockDiv, block, page, idx) {\r\n+  const menu = document.getElementById('command-menu');\r\n+  menu.innerHTML = '';\r\n+  const types = [\r\n+    { type: 'text', label: 'Text' },\r\n+    { type: 'h1', label: 'Heading 1' },\r\n+    { type: 'h2', label: 'Heading 2' },\r\n+    { type: 'h3', label: 'Heading 3' },\r\n+    { type: 'todo', label: 'To-do' },\r\n+    { type: 'bullet', label: 'Bullet List' },\r\n+    { type: 'code', label: 'Code Block' },\r\n+    { type: 'quote', label: 'Quote' },\r\n+  ];\r\n+  types.forEach(opt => {\r\n+    const item = document.createElement('div');\r\n+    item.textContent = opt.label;\r\n+    item.className = 'command-menu-item';\r\n+    item.onclick = () => {\r\n+      block.type = opt.type;\r\n+      if (opt.type === 'todo') block.checked = false;\r\n+      updatePages(window.pages);\r\n+      menu.classList.add('hidden');\r\n+      setTimeout(() => blockDiv.focus(), 10);\r\n+    };\r\n+    menu.appendChild(item);\r\n+  });\r\n+  const rect = blockDiv.getBoundingClientRect();\r\n+  menu.style.top = rect.bottom + window.scrollY + 'px';\r\n+  menu.style.left = rect.left + window.scrollX + 'px';\r\n+  menu.classList.remove('hidden');\r\n+  document.addEventListener('mousedown', function hideMenu(e) {\r\n+    if (!menu.contains(e.target)) {\r\n+      menu.classList.add('hidden');\r\n+      document.removeEventListener('mousedown', hideMenu);\r\n+    }\r\n+  });\r\n+}\r\n+\r\n export function initPage() {\r\n-  // MVP: block editing handled in sidebar.js renderPage for now\r\n+  window.pages = window.pages || [];\r\n+  function renderBlocks() {\r\n+    const page = getSelectedPage();\r\n+    if (!page) return;\r\n+    const blocksContainer = document.getElementById('blocks-container');\r\n+    blocksContainer.innerHTML = '';\r\n+    page.blocks.forEach((block, idx) => {\r\n+      renderBlock(block, idx, page, blocksContainer);\r\n+    });\r\n+  }\r\n+  // Patch updatePages to re-render blocks\r\n+  const origUpdatePages = updatePages;\r\n+  updatePages = function(newPages) {\r\n+    window.pages = newPages;\r\n+    origUpdatePages(newPages);\r\n+    renderBlocks();\r\n+  };\r\n+  renderBlocks();\r\n }\r\n"
                },
                {
                    "date": 1749487897201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n   blockDiv.contentEditable = true;\r\n   blockDiv.dataset.id = block.id;\r\n   blockDiv.dataset.type = block.type;\r\n   blockDiv.spellcheck = true;\r\n+  blockDiv.draggable = true;\r\n   // Block type rendering\r\n   if (block.type === 'h1') {\r\n     blockDiv.style.fontSize = '2rem';\r\n     blockDiv.style.fontWeight = '700';\r\n@@ -103,8 +104,38 @@\n       page.blocks.splice(idx, 1);\r\n       updatePages(window.pages);\r\n     }\r\n   };\r\n+  // Drag and drop handlers\r\n+  blockDiv.addEventListener('dragstart', e => {\r\n+    e.dataTransfer.effectAllowed = 'move';\r\n+    e.dataTransfer.setData('text/plain', block.id);\r\n+    blockDiv.classList.add('dragging');\r\n+  });\r\n+  blockDiv.addEventListener('dragend', () => {\r\n+    blockDiv.classList.remove('dragging');\r\n+    document.querySelectorAll('.block.drop-target').forEach(el => el.classList.remove('drop-target'));\r\n+  });\r\n+  blockDiv.addEventListener('dragover', e => {\r\n+    e.preventDefault();\r\n+    blockDiv.classList.add('drop-target');\r\n+  });\r\n+  blockDiv.addEventListener('dragleave', () => {\r\n+    blockDiv.classList.remove('drop-target');\r\n+  });\r\n+  blockDiv.addEventListener('drop', e => {\r\n+    e.preventDefault();\r\n+    blockDiv.classList.remove('drop-target');\r\n+    const draggedId = e.dataTransfer.getData('text/plain');\r\n+    if (draggedId === block.id) return;\r\n+    const fromIdx = page.blocks.findIndex(b => b.id === draggedId);\r\n+    const toIdx = idx;\r\n+    if (fromIdx === -1 || toIdx === -1 || fromIdx === toIdx) return;\r\n+    const [moved] = page.blocks.splice(fromIdx, 1);\r\n+    page.blocks.splice(toIdx, 0, moved);\r\n+    updatePages(window.pages);\r\n+  });\r\n+\r\n   blocksContainer.appendChild(blockDiv);\r\n }\r\n \r\n function addBlockAfter(idx, page) {\r\n"
                },
                {
                    "date": 1749487996485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n   blockDiv.dataset.id = block.id;\r\n   blockDiv.dataset.type = block.type;\r\n   blockDiv.spellcheck = true;\r\n   blockDiv.draggable = true;\r\n+\r\n   // Block type rendering\r\n   if (block.type === 'h1') {\r\n     blockDiv.style.fontSize = '2rem';\r\n     blockDiv.style.fontWeight = '700';\r\n@@ -78,16 +79,18 @@\n     blockDiv.textContent = block.content;\r\n   } else {\r\n     blockDiv.textContent = block.content;\r\n   }\r\n+\r\n   // Block input\r\n   if (block.type !== 'todo') {\r\n     blockDiv.oninput = e => {\r\n       block.content = e.target.textContent;\r\n       page.updated = Date.now();\r\n       updatePages(window.pages);\r\n     };\r\n   }\r\n+\r\n   // Add block type selector on \"/\"\r\n   blockDiv.onkeydown = e => {\r\n     if (e.key === '/' && block.type === 'text') {\r\n       showCommandMenu(blockDiv, block, page, idx);\r\n@@ -104,8 +107,9 @@\n       page.blocks.splice(idx, 1);\r\n       updatePages(window.pages);\r\n     }\r\n   };\r\n+\r\n   // Drag and drop handlers\r\n   blockDiv.addEventListener('dragstart', e => {\r\n     e.dataTransfer.effectAllowed = 'move';\r\n     e.dataTransfer.setData('text/plain', block.id);\r\n"
                }
            ],
            "date": 1749486865000,
            "name": "Commit-0",
            "content": "// Page logic: handles title, blocks, block editing, drag-drop, commands\r\nexport function initPage() {\r\n  // TODO: Implement page logic\r\n}\r\n"
        }
    ]
}