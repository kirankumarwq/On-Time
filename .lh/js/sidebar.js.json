{
    "sourceFile": "js/sidebar.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1749486864999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749486950834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,105 @@\n-// Sidebar logic: handles page list, add/delete, search, nested pages\r\n+import { savePages, loadPages } from './storage.js';\r\n+\r\n+let pages = [];\r\n+let selectedPageId = null;\r\n+\r\n+function createPage(title = 'Untitled', parentId = null) {\r\n+  return {\r\n+    id: 'page-' + Date.now() + '-' + Math.random().toString(36).slice(2, 8),\r\n+    title,\r\n+    parentId,\r\n+    children: [],\r\n+    blocks: [createBlock('text', '')],\r\n+    created: Date.now(),\r\n+    updated: Date.now(),\r\n+  };\r\n+}\r\n+\r\n+function createBlock(type = 'text', content = '') {\r\n+  return {\r\n+    id: 'block-' + Date.now() + '-' + Math.random().toString(36).slice(2, 8),\r\n+    type,\r\n+    content,\r\n+  };\r\n+}\r\n+\r\n+function renderSidebar() {\r\n+  const list = document.getElementById('pages-list');\r\n+  list.innerHTML = '';\r\n+  function renderPages(pagesArr, parentId = null, level = 0) {\r\n+    pagesArr.filter(p => p.parentId === parentId).forEach(page => {\r\n+      const item = document.createElement('div');\r\n+      item.className = 'sidebar-page';\r\n+      item.style.paddingLeft = (level * 18 + 8) + 'px';\r\n+      item.textContent = page.title;\r\n+      item.dataset.id = page.id;\r\n+      if (page.id === selectedPageId) item.classList.add('active');\r\n+      item.onclick = () => selectPage(page.id);\r\n+      list.appendChild(item);\r\n+      renderPages(pagesArr, page.id, level + 1);\r\n+    });\r\n+  }\r\n+  renderPages(pages);\r\n+}\r\n+\r\n+function selectPage(id) {\r\n+  selectedPageId = id;\r\n+  renderSidebar();\r\n+  renderPage();\r\n+  savePages(pages);\r\n+}\r\n+\r\n+function addPage() {\r\n+  const page = createPage();\r\n+  pages.push(page);\r\n+  selectPage(page.id);\r\n+}\r\n+\r\n+function renderPage() {\r\n+  const page = pages.find(p => p.id === selectedPageId);\r\n+  if (!page) return;\r\n+  const titleInput = document.getElementById('page-title');\r\n+  titleInput.value = page.title;\r\n+  titleInput.oninput = e => {\r\n+    page.title = e.target.value;\r\n+    page.updated = Date.now();\r\n+    renderSidebar();\r\n+    savePages(pages);\r\n+  };\r\n+  const blocksContainer = document.getElementById('blocks-container');\r\n+  blocksContainer.innerHTML = '';\r\n+  page.blocks.forEach((block, idx) => {\r\n+    const blockDiv = document.createElement('div');\r\n+    blockDiv.className = 'block';\r\n+    blockDiv.contentEditable = true;\r\n+    blockDiv.dataset.id = block.id;\r\n+    blockDiv.textContent = block.content;\r\n+    blockDiv.oninput = e => {\r\n+      block.content = e.target.textContent;\r\n+      page.updated = Date.now();\r\n+      savePages(pages);\r\n+    };\r\n+    blocksContainer.appendChild(blockDiv);\r\n+  });\r\n+}\r\n+\r\n export function initSidebar() {\r\n-  // TODO: Implement sidebar logic\r\n+  const addBtn = document.getElementById('add-page');\r\n+  addBtn.onclick = addPage;\r\n+  // Load from storage or create first page\r\n+  pages = loadPages() || [createPage('Welcome to Notion Clone')];\r\n+  selectedPageId = pages[0].id;\r\n+  renderSidebar();\r\n+  renderPage();\r\n }\r\n+\r\n+export function getSelectedPage() {\r\n+  return pages.find(p => p.id === selectedPageId);\r\n+}\r\n+\r\n+export function updatePages(newPages) {\r\n+  pages = newPages;\r\n+  renderSidebar();\r\n+  renderPage();\r\n+  savePages(pages);\r\n+}\r\n"
                },
                {
                    "date": 1749487207606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,28 @@\n       item.textContent = page.title;\r\n       item.dataset.id = page.id;\r\n       if (page.id === selectedPageId) item.classList.add('active');\r\n       item.onclick = () => selectPage(page.id);\r\n+      // Add add-subpage button\r\n+      const addSubBtn = document.createElement('button');\r\n+      addSubBtn.textContent = '+';\r\n+      addSubBtn.title = 'Add subpage';\r\n+      addSubBtn.className = 'add-subpage-btn';\r\n+      addSubBtn.onclick = (e) => {\r\n+        e.stopPropagation();\r\n+        addPage(page.id);\r\n+      };\r\n+      item.appendChild(addSubBtn);\r\n+      // Add delete button\r\n+      const delBtn = document.createElement('button');\r\n+      delBtn.textContent = 'ðŸ—‘';\r\n+      delBtn.title = 'Delete page';\r\n+      delBtn.className = 'delete-page-btn';\r\n+      delBtn.onclick = (e) => {\r\n+        e.stopPropagation();\r\n+        deletePage(page.id);\r\n+      };\r\n+      item.appendChild(delBtn);\r\n       list.appendChild(item);\r\n       renderPages(pagesArr, page.id, level + 1);\r\n     });\r\n   }\r\n@@ -48,14 +68,40 @@\n   renderPage();\r\n   savePages(pages);\r\n }\r\n \r\n-function addPage() {\r\n-  const page = createPage();\r\n+function addPage(parentId = null) {\r\n+  const page = createPage('Untitled', parentId);\r\n   pages.push(page);\r\n   selectPage(page.id);\r\n }\r\n \r\n+function deletePage(id) {\r\n+  // Remove page and all its children recursively\r\n+  function removeRecursive(pageId) {\r\n+    const idx = pages.findIndex(p => p.id === pageId);\r\n+    if (idx !== -1) {\r\n+      // Remove children first\r\n+      pages.filter(p => p.parentId === pageId).forEach(child => removeRecursive(child.id));\r\n+      pages.splice(idx, 1);\r\n+    }\r\n+  }\r\n+  removeRecursive(id);\r\n+  // Select another page if needed\r\n+  if (selectedPageId === id) {\r\n+    if (pages.length > 0) {\r\n+      selectedPageId = pages[0].id;\r\n+    } else {\r\n+      const newPage = createPage('Untitled');\r\n+      pages.push(newPage);\r\n+      selectedPageId = newPage.id;\r\n+    }\r\n+  }\r\n+  renderSidebar();\r\n+  renderPage();\r\n+  savePages(pages);\r\n+}\r\n+\r\n function renderPage() {\r\n   const page = pages.find(p => p.id === selectedPageId);\r\n   if (!page) return;\r\n   const titleInput = document.getElementById('page-title');\r\n@@ -84,9 +130,9 @@\n }\r\n \r\n export function initSidebar() {\r\n   const addBtn = document.getElementById('add-page');\r\n-  addBtn.onclick = addPage;\r\n+  addBtn.onclick = () => addPage();\r\n   // Load from storage or create first page\r\n   pages = loadPages() || [createPage('Welcome to Notion Clone')];\r\n   selectedPageId = pages[0].id;\r\n   renderSidebar();\r\n"
                }
            ],
            "date": 1749486864999,
            "name": "Commit-0",
            "content": "// Sidebar logic: handles page list, add/delete, search, nested pages\r\nexport function initSidebar() {\r\n  // TODO: Implement sidebar logic\r\n}\r\n"
        }
    ]
}